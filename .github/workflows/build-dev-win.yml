name: Build dev version artifacts for window
on:
  push:
    branches:
      - feat-github-action-win

jobs:

  win-build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      #- name: See environment
      #  run: where.exe cmake ninja 7z clang gcc vcpkg
      #- name: See versions
      #  run: |
      #    cmake --version
      #    ninja --version
      #    clang --version
      #    gcc --version
      #- name: See Path
      #  run: $env:path -split ';'
      - name: Make dirs
        run: |
          mkdir bin
          mkdir bin/mingw64
          mkdir bin/Qt6.4.0-gcc12-shared
          mkdir 3rdParty

      - name: Download mingw64 and extract
        run: | 
          cmd
          curl -JL -o bin/gcc12.7z "https://github.com/niXman/mingw-builds-binaries/releases/download/12.2.0-rt_v10-rev0/x86_64-12.2.0-release-posix-seh-rt_v10-rev0.7z"
          7z x -obin bin/gcc12.7z
          exit
        # gcc installation dir: bin/mingw64
        # gcc.exe: bin/mingw64/bin/gcc.exe
        # g++.exe: bin/mingw64/bin/g++.exe
      - name: Build and install zlib
        run: |
          $basedir=(pwd).path
          $basedir=($basedir).replace("\\","/")
          echo "basedir = $basedir"
          cd 3rdParty
          git clone https://github.com/madler/zlib.git
          cd zlib
          git checkout v1.2.13
          cd $basedir
          mkdir bin/build-zlib
          cmake -S 3rdParty/zlib -B bin/build-zlib -G Ninja -DCMAKE_C_COMPILER:FILEPATH="$basedir/bin/mingw64/bin/gcc.exe" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$basedir/bin/mingw64"
          cmake --build bin/build-zlib --parallel
          cmake --install bin/build-zlib
      
      - name: Build and install libzip
        run: |
          $basedir=(pwd).path
          $basedir=($basedir).replace("\\","/")
          cd 3rdParty
          git clone https://github.com/nih-at/libzip.git
          cd libzip
          git checkout v1.9.2
          cd $basedir
          mkdir bin/build-libzip
          cmake -S 3rdParty/libzip -B bin/build-libzip -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER:FILEPATH="$basedir/bin/mingw64/bin/gcc.exe" -DCMAKE_CXX_COMPILER:FILEPATH="$basedir/bin/mingw64/bin/g++.exe" -DCMAKE_INSTALL_PREFIX="$basedir/bin/mingw64" -DCMAKE_PREFIX_PATH="$basedir/bin/mingw64" -DBUILD_SHARED_LIBS=true -DLIBZIP_DO_INSTALL=true
          cmake --build bin/build-libzip --parallel
          cmake --install bin/build-libzip

      - name: Build and install libpng
        run: |
          $basedir=(pwd).path
          $basedir=($basedir).replace("\\","/")
          cd 3rdParty
          git clone https://github.com/glennrp/libpng.git
          cd libpng
          git checkout v1.6.39
          cd $basedir
          mkdir bin/build-libpng
          cmake -S 3rdParty/libpng -B bin/build-libpng -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER:FILEPATH="$basedir/bin/mingw64/bin/gcc.exe" -DCMAKE_CXX_COMPILER:FILEPATH="$basedir/bin/mingw64/bin/g++.exe" -DCMAKE_INSTALL_PREFIX="$basedir/bin/mingw64" -DCMAKE_PREFIX_PATH="$basedir/bin/mingw64"
          cmake --build bin/build-libpng --parallel
          cmake --install bin/build-libpng
            
      - name: Download Qt6.4.0-gcc12-shared and extract
        run: |
          cmd
          curl -JL -o bin/Qt6.4.0-gcc12-shared.7z "https://github.com/SlopeCraft/VisualCraft-binaries/releases/download/win-binaries/Qt6.4.0-gcc12-shared-native.7z"
          7z x -o"bin/Qt6.4.0-gcc12-shared" bin/Qt6.4.0-gcc12-shared.7z
          exit
          tree /f bin/Qt6.4.0-gcc12-shared
        # Qt installation dir: bin/Qt6.4.0-gcc12-shared
      - name: CMake configure
        run: |
          $basedir=(pwd).path
          $basedir=($basedir).replace("\\","/")
          $exclude_key_words="perl","Strawberry"
          $new_path=""
          foreach($p in $env:path.split(';')) {$exclude=$false; foreach($ekw in $exclude_key_words)	{if($p.contains($ekw)) {$exclude=$true;break;}}if(-not($exclude)) {$new_path="$new_path;$p"}}
          echo $new_path.split(';')
          $env:path="$new_path;$basedir/bin/mingw64/bin"
          echo $env:path.split(';')
          mkdir build
          mkdir install
          cmake -S . -B build -G "MinGW Makefiles" -DCMAKE_C_COMPILER:FILEPATH="$basedir/bin/mingw64/bin/gcc.exe" -DCMAKE_CXX_COMPILER:FILEPATH="$basedir/bin/mingw64/bin/g++.exe" -DCMAKE_PREFIX_PATH:PATH="$basedir/bin/Qt6.4.0-gcc12-shared" -DCMAKE_BUILD_TYPE:STRING=Release -DSlopeCraft_GPU_API:STRING=None
      - name: CMake build
        run: |
          $basedir=(pwd).path
          $basedir=($basedir).replace("\\","/")
          $exclude_key_words="perl","Strawberry"
          $new_path=""
          foreach($p in $env:path.split(';')) {$exclude=$false; foreach($ekw in $exclude_key_words)	{if($p.contains($ekw)) {$exclude=$true;break;}}if(-not($exclude)) {$new_path="$new_path;$p"}}
          $env:path="$new_path;$basedir/bin/mingw64/bin"
          echo "Number of processors = $env:NUMBER_OF_PROCESSORS"
          cmake --build ./build --parallel 10
      - name: CMake install
        run: |
          $basedir=(pwd).path
          $basedir=($basedir).replace("\\","/")
          $exclude_key_words="perl","Strawberry"
          $new_path=""
          foreach($p in $env:path.split(';')) {$exclude=$false; foreach($ekw in $exclude_key_words)	{if($p.contains($ekw)) {$exclude=$true;break;}}if(-not($exclude)) {$new_path="$new_path;$p"}}
          $env:path="$new_path;$basedir/bin/mingw64/bin"
          cmake --install ./build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with: 
          name: SlopeCraft-dev-windows.zip
          path: install
          if-no-files-found: error 


      #- name: Tree /f
      #  run: tree /f D:/ > bin/all_files_on_D.txt
      #- name: Upload all_files_on_D.txt
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: all_files_on_D.txt
      #    path: bin/all_files_on_D.txt
      #    if-no-files-found: error 

      

      #- name: Upload gcc
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: gcc12-with-zlib,libzip,libpng
      #    path: bin/mingw64
      #    if-no-files-found: error    