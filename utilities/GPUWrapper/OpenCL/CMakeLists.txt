
find_package(OpenCL 3.0 REQUIRED)

message(STATUS "Configuring OpenCL")
include(${CMAKE_SOURCE_DIR}/cmake/find_ResourceCreator.cmake)
include(${CMAKE_SOURCE_DIR}/3rdParty/ResourceCreator.cmake/ResourceCreator.cmake)

add_library(OCLWrapper STATIC
    OCLWrapper.h
    OCLWrapper.cpp

    GPU_interface.cpp)

if(CMAKE_SYSTEM_NAME MATCHES "Linux")
    set_target_properties(OCLWrapper PROPERTIES POSITION_INDEPENDENT_CODE TRUE)
endif()

# convert ColorDiff.cl to a resource file (not windows rc). It is generated by ResourceCreator.cmake (3rd party cmake lib)
add_resource(ColorManip_cl_rc ColorDiff.cl)

# create an empty .c file to pass qt's checking during configuration
set(file_to_check ${CMAKE_CURRENT_BINARY_DIR}/__rsc_ColorManip_cl_rc.c)
file(TOUCH ${file_to_check})

# This script is expceted to delete the touched empty .c file,
# because ResourceCreator.cmake thinks the resource is generated, even if the .c file is empty.
# So we need to delete .c manually to force ResourceCreator.cmake to generate it.
configure_file(remove_empty_rc_file.cmake.in
    ${CMAKE_CURRENT_BINARY_DIR}/remove_empty_rc_file.cmake
    @ONLY)

# Add a custom target to execute the cmake script
add_custom_target(RemoveEmptyRCFile ALL
    COMMAND cmake -P ${CMAKE_CURRENT_BINARY_DIR}/remove_empty_rc_file.cmake)

# The custom target must be executed before ColorManip_cl_rc
add_dependencies(ColorManip_cl_rc RemoveEmptyRCFile)

target_include_directories(OCLWrapper PRIVATE ${SlopeCraft_Eigen3_include_dir})
target_include_directories(OCLWrapper PUBLIC ${CMAKE_SOURCE_DIR})
target_include_directories(OCLWrapper INTERFACE ${CMAKE_CURRENT_SOURCE_DIR})
target_compile_features(OCLWrapper PUBLIC cxx_std_20)
target_link_libraries(OCLWrapper PUBLIC OpenCL::OpenCL ColorManip_cl_rc)

target_link_libraries(GPUInterface PUBLIC OCLWrapper)
target_compile_definitions(GPUInterface PUBLIC SLOPECRAFT_HAVE_OPENCL)

if(${LINUX})
    set_target_properties(GPUInterface PROPERTIES POSITION_INDEPENDENT_CODE TRUE)
endif()